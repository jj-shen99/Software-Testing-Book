name: Test Automation CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run data validation
      run: |
        python scripts/data_quality_validator.py
        python scripts/test_data_profiler.py

    - name: Run test workflow
      run: python scripts/test_workflow_runner.py

    - name: Generate reports
      run: |
        python scripts/data_quality_dashboard.py
        python scripts/profile_visualizer.py

    - name: Upload test results
      uses: actions/upload-artifact@v2
      with:
        name: test-results
        path: |
          sample_analysis_results/test_results_*
          !sample_analysis_results/test_results_*/raw

    - name: Upload test reports
      uses: actions/upload-artifact@v2
      with:
        name: test-reports
        path: |
          sample_analysis_results/*/reports
          sample_analysis_results/*/visualizations

    - name: Check test results
      run: |
        if [ -f sample_analysis_results/test_results_*/workflow.log ]; then
          if grep -q "ERROR" sample_analysis_results/test_results_*/workflow.log; then
            echo "Tests failed"
            exit 1
          fi
        fi

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - uses: actions/checkout@v2

    - name: Download test results
      uses: actions/download-artifact@v2
      with:
        name: test-results
        path: test-results

    - name: Deploy test results
      run: |
        # Deploy test results to your preferred hosting service
        echo "Deploying test results..."

    - name: Update dashboards
      run: |
        # Update monitoring dashboards
        echo "Updating dashboards..."

    - name: Send notifications
      if: always()
      run: |
        if [ ${{ job.status }} == 'success' ]; then
          echo "Tests passed and deployed successfully"
        else
          echo "Tests or deployment failed"
          exit 1
        fi
